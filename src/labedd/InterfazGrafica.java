/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package labedd;

import javax.swing.*;
import java.awt.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author jose1
 */
public class InterfazGrafica extends javax.swing.JFrame {

    /**
     * Creates new form InterfazGrafica
     */
    private CardLayout cardLayout;

    public InterfazGrafica() {
        initComponents();

    }
//Ana tonta

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SideBar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        MainPanel = new javax.swing.JPanel();
        Inicio = new javax.swing.JPanel();
        label2 = new java.awt.Label();
        label6 = new java.awt.Label();
        Productos = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        Overview_Productos = new javax.swing.JTable();
        Proveedores = new javax.swing.JPanel();
        label7 = new java.awt.Label();
        jScrollPane3 = new javax.swing.JScrollPane();
        Overview_Proveedores = new javax.swing.JTable();
        Reposicion_De_Productos = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        Eliminar_Productos = new javax.swing.JPanel();
        label4 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();
        Button_Eliminar = new javax.swing.JButton();
        ComboBox1 = new javax.swing.JComboBox<>();
        Actualizar_Precio_Del_Producto = new javax.swing.JPanel();
        label5 = new java.awt.Label();
        ComboBox2 = new javax.swing.JComboBox<>();
        PrecioNuevo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ButtonActualizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PrecioViejo = new javax.swing.JLabel();
        Agregar_Eliminar_Proveedores = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CedulaEliminar = new javax.swing.JTextField();
        CedulaJuridica = new javax.swing.JTextField();
        FechaDeEntrega = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        NombreProveedor1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        ProductoSuministrado1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        SideBar.setBackground(new java.awt.Color(0, 102, 102));
        SideBar.setForeground(new java.awt.Color(0, 102, 102));
        SideBar.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                SideBarComponentShown(evt);
            }
        });
        SideBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/La_Estrella_Logo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(117, 77));
        jLabel1.setMinimumSize(new java.awt.Dimension(117, 77));
        jLabel1.setPreferredSize(new java.awt.Dimension(117, 77));
        SideBar.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 100, 100));

        jPanel1.setBackground(SideBar.getBackground());
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 1, 1, 1));

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Productos");
        jButton1.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 153, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Proveedores");
        jButton2.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Venta/ Reposición de productos");
        jButton3.setActionCommand("Reposición/Venta de productos");
        jButton3.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 153, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Eliminar productos");
        jButton4.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 153, 255));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Actualizar precio del producto");
        jButton6.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 153, 255));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Agregar/Eliminar proveedores");
        jButton5.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
        );

        SideBar.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 300, -1));

        getContentPane().add(SideBar);
        SideBar.setBounds(0, 0, 300, 740);

        MainPanel.setLayout(new java.awt.CardLayout());

        label2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label2.setForeground(new java.awt.Color(51, 153, 255));
        label2.setText("Inicio");

        label6.setText("Software Diseñado para el laboratorio de estructura de datos 1.");

        javax.swing.GroupLayout InicioLayout = new javax.swing.GroupLayout(Inicio);
        Inicio.setLayout(InicioLayout);
        InicioLayout.setHorizontalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InicioLayout.createSequentialGroup()
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InicioLayout.createSequentialGroup()
                        .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
                        .addGap(45, 45, 45))))
        );
        InicioLayout.setVerticalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(551, Short.MAX_VALUE))
        );

        MainPanel.add(Inicio, "card3");

        label1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label1.setForeground(new java.awt.Color(51, 153, 255));
        label1.setText("Productos");

        Overview_Productos.setAutoCreateRowSorter(true);
        Overview_Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Producto", "Nombre", "Categoría", "Precio", "Cantidad en Stock", "Fecha Última Reposicion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Overview_Productos.setToolTipText("");
        Overview_Productos.setFillsViewportHeight(true);
        Overview_Productos.setGridColor(new java.awt.Color(0, 0, 0));
        Overview_Productos.setRowHeight(25);
        Overview_Productos.setShowHorizontalLines(true);
        Overview_Productos.setSurrendersFocusOnKeystroke(true);
        Overview_Productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Overview_ProductosMouseClicked(evt);
            }
        });
        Overview_Productos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Overview_ProductosComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(Overview_Productos);
        if (Overview_Productos.getColumnModel().getColumnCount() > 0) {
            Overview_Productos.getColumnModel().getColumn(0).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(1).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(2).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(3).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(4).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(5).setResizable(false);
            Overview_Productos.getColumnModel().getColumn(5).setHeaderValue("Fecha Última Reposicion");
        }
        System.out.println("Inicio Mostrar Productos");

        javax.swing.GroupLayout ProductosLayout = new javax.swing.GroupLayout(Productos);
        Productos.setLayout(ProductosLayout);
        ProductosLayout.setHorizontalGroup(
            ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        ProductosLayout.setVerticalGroup(
            ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductosLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        MainPanel.add(Productos, "card3");

        label7.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label7.setForeground(new java.awt.Color(51, 153, 255));
        label7.setText("Proveedores");

        Overview_Proveedores.setAutoCreateRowSorter(true);
        Overview_Proveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Proveedor", "Cédula Jurídica", "Productos Suministrados", "Cantidad Suministrada", "Fecha Última Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Overview_Proveedores.setToolTipText("");
        Overview_Proveedores.setFillsViewportHeight(true);
        Overview_Proveedores.setGridColor(new java.awt.Color(0, 0, 0));
        Overview_Proveedores.setRowHeight(25);
        Overview_Proveedores.setShowHorizontalLines(true);
        Overview_Proveedores.setSurrendersFocusOnKeystroke(true);
        Overview_Proveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Overview_ProveedoresMouseClicked(evt);
            }
        });
        Overview_Proveedores.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Overview_ProveedoresComponentShown(evt);
            }
        });
        jScrollPane3.setViewportView(Overview_Proveedores);
        if (Overview_Proveedores.getColumnModel().getColumnCount() > 0) {
            Overview_Proveedores.getColumnModel().getColumn(0).setResizable(false);
            Overview_Proveedores.getColumnModel().getColumn(1).setResizable(false);
            Overview_Proveedores.getColumnModel().getColumn(2).setResizable(false);
            Overview_Proveedores.getColumnModel().getColumn(3).setResizable(false);
            Overview_Proveedores.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout ProveedoresLayout = new javax.swing.GroupLayout(Proveedores);
        Proveedores.setLayout(ProveedoresLayout);
        ProveedoresLayout.setHorizontalGroup(
            ProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(label7, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        ProveedoresLayout.setVerticalGroup(
            ProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProveedoresLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        MainPanel.add(Proveedores, "card3");

        label3.setText("Reposición de productos");

        javax.swing.GroupLayout Reposicion_De_ProductosLayout = new javax.swing.GroupLayout(Reposicion_De_Productos);
        Reposicion_De_Productos.setLayout(Reposicion_De_ProductosLayout);
        Reposicion_De_ProductosLayout.setHorizontalGroup(
            Reposicion_De_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
            .addGroup(Reposicion_De_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Reposicion_De_ProductosLayout.createSequentialGroup()
                    .addGap(240, 240, 240)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(591, Short.MAX_VALUE)))
        );
        Reposicion_De_ProductosLayout.setVerticalGroup(
            Reposicion_De_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
            .addGroup(Reposicion_De_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Reposicion_De_ProductosLayout.createSequentialGroup()
                    .addGap(344, 344, 344)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(345, Short.MAX_VALUE)))
        );

        MainPanel.add(Reposicion_De_Productos, "card8");

        label4.setFont(new java.awt.Font("Microsoft Himalaya", 1, 36)); // NOI18N
        label4.setForeground(new java.awt.Color(0, 153, 255));
        label4.setText("Eliminar productos");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione el producto que desea eliminar:");

        Button_Eliminar.setText("Eliminar");
        Button_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EliminarActionPerformed(evt);
            }
        });

        ComboBox1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        ComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBox1MouseClicked(evt);
            }
        });
        ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Eliminar_ProductosLayout = new javax.swing.GroupLayout(Eliminar_Productos);
        Eliminar_Productos.setLayout(Eliminar_ProductosLayout);
        Eliminar_ProductosLayout.setHorizontalGroup(
            Eliminar_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                .addGroup(Eliminar_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel2))
                    .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                        .addGap(424, 424, 424)
                        .addComponent(Button_Eliminar)))
                .addContainerGap(503, Short.MAX_VALUE))
        );
        Eliminar_ProductosLayout.setVerticalGroup(
            Eliminar_ProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Eliminar_ProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Button_Eliminar)
                .addContainerGap(441, Short.MAX_VALUE))
        );

        MainPanel.add(Eliminar_Productos, "card7");

        label5.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        label5.setForeground(new java.awt.Color(255, 51, 51));
        label5.setText("Actualizar precio de productos");

        ComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        ComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBox2MouseClicked(evt);
            }
        });
        ComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox2ActionPerformed(evt);
            }
        });

        jLabel6.setText("El precio actual es:");

        ButtonActualizar.setText("Actualizar");
        ButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonActualizarActionPerformed(evt);
            }
        });

        jLabel8.setText("Producto:");

        jLabel12.setText("Ingrese el nuevo precio:");

        javax.swing.GroupLayout Actualizar_Precio_Del_ProductoLayout = new javax.swing.GroupLayout(Actualizar_Precio_Del_Producto);
        Actualizar_Precio_Del_Producto.setLayout(Actualizar_Precio_Del_ProductoLayout);
        Actualizar_Precio_Del_ProductoLayout.setHorizontalGroup(
            Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                .addGroup(Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addGroup(Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(ButtonActualizar))))
                    .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel8))
                    .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(30, 30, 30)
                                .addComponent(PrecioNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PrecioViejo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(509, Short.MAX_VALUE))
        );
        Actualizar_Precio_Del_ProductoLayout.setVerticalGroup(
            Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Actualizar_Precio_Del_ProductoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PrecioViejo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(Actualizar_Precio_Del_ProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(PrecioNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(ButtonActualizar)
                .addContainerGap(361, Short.MAX_VALUE))
        );

        MainPanel.add(Actualizar_Precio_Del_Producto, "card5");

        Agregar_Eliminar_Proveedores.setLayout(null);

        jLabel4.setText("ELIMINAR PROVEEDORES:");
        Agregar_Eliminar_Proveedores.add(jLabel4);
        jLabel4.setBounds(290, 330, 190, 40);

        jLabel5.setText("Nombre:");
        Agregar_Eliminar_Proveedores.add(jLabel5);
        jLabel5.setBounds(50, 50, 190, 40);

        jLabel7.setText("Fecha de registro:");
        Agregar_Eliminar_Proveedores.add(jLabel7);
        jLabel7.setBounds(50, 210, 190, 40);

        CedulaEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedulaEliminarActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(CedulaEliminar);
        CedulaEliminar.setBounds(300, 390, 300, 20);

        CedulaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedulaJuridicaActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(CedulaJuridica);
        CedulaJuridica.setBounds(150, 110, 280, 30);
        Agregar_Eliminar_Proveedores.add(FechaDeEntrega);
        FechaDeEntrega.setBounds(170, 220, 240, 30);

        jButton7.setText("Guardar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(jButton7);
        jButton7.setBounds(480, 90, 120, 80);

        jLabel9.setText("AGREGA LOS PROVEDORES AQUÍ!");
        Agregar_Eliminar_Proveedores.add(jLabel9);
        jLabel9.setBounds(270, 10, 190, 40);

        jLabel10.setText("Cédula jurídica:");
        Agregar_Eliminar_Proveedores.add(jLabel10);
        jLabel10.setBounds(50, 100, 190, 40);

        NombreProveedor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreProveedor1ActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(NombreProveedor1);
        NombreProveedor1.setBounds(130, 60, 300, 30);

        jLabel11.setText("Ingresa la cedula juridica del proveedor:");
        Agregar_Eliminar_Proveedores.add(jLabel11);
        jLabel11.setBounds(50, 380, 220, 40);

        jButton8.setText("ELIMINAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(jButton8);
        jButton8.setBounds(400, 450, 110, 30);

        jButton9.setText("Verificar Proveedor");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        Agregar_Eliminar_Proveedores.add(jButton9);
        jButton9.setBounds(150, 450, 140, 30);

        jLabel13.setText("Producto suministrado:");
        Agregar_Eliminar_Proveedores.add(jLabel13);
        jLabel13.setBounds(50, 150, 190, 40);
        Agregar_Eliminar_Proveedores.add(ProductoSuministrado1);
        ProductoSuministrado1.setBounds(190, 160, 240, 30);

        MainPanel.add(Agregar_Eliminar_Proveedores, "card4");

        getContentPane().add(MainPanel);
        MainPanel.setBounds(300, 0, 1000, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Productos);
        MainPanel.repaint();
        MainPanel.revalidate();

        // Obtener el modelo de la tabla Overview_Productos
        DefaultTableModel model = (DefaultTableModel) Overview_Productos.getModel();

// Añadir la nueva fila al modelo de la tabla

        try {
            model.setRowCount(0); 
            BufferedReader br = new BufferedReader(new FileReader("src/Files/Productos.txt"));
            String linea;
            br.readLine(); // Omitir la primera línea de encabezados
            while ((linea = br.readLine()) != null) {
                String[] campos = linea.split("\\|");
                Object[] fila = {
                    campos[0], // CódigoProducto
                    campos[1], // Nombre
                    campos[2], // Categoría
                    Double.parseDouble(campos[3]), // Precio
                    Integer.parseInt(campos[4]), // CantidadStock
                    campos[5] // FechaÚltimaReposición
                };
                model.addRow(fila);
            };

        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Proveedores);
        MainPanel.repaint();
        MainPanel.revalidate();
        // Obtener el modelo de la tabla Overview_Productos
        DefaultTableModel model = (DefaultTableModel) Overview_Proveedores.getModel();

// Añadir la nueva fila al modelo de la tabla
        System.out.println("Leyendo Proveedores");
        model.setRowCount(0); 
        try {
            BufferedReader br = new BufferedReader(new FileReader("src/Files/Proveedores.txt"));
            String linea;
            br.readLine(); // Omitir la primera línea de encabezados
            while ((linea = br.readLine()) != null) {
                String[] campos = linea.split("\\|");
                Object[] fila = {
                    campos[0], // NombreProveedor
                    campos[1], // CedulaJuridica
                    campos[2], // ProductosSuministrados
                    Integer.parseInt(campos[3]), // CantidadSuministrada
                    campos[4] // FechaUltimaEntrega
                };
                model.addRow(fila);
            };

        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Reposicion_De_Productos);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Eliminar_Productos);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Actualizar_Precio_Del_Producto);
        MainPanel.repaint();
        MainPanel.revalidate();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        MainPanel.removeAll();
        MainPanel.add(Agregar_Eliminar_Proveedores);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

    }//GEN-LAST:event_jButton1MouseClicked

    private void Button_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EliminarActionPerformed
        String cod_eliminar= ComboBox1.getSelectedItem().toString();
        try{
            File Productos = new File ("src/Files/Productos.txt");
            BufferedReader pr = new BufferedReader(new FileReader(Productos));
            File fichero = new File("src/Files/Productos2.txt");
            FileWriter outFile = new FileWriter(fichero,false);
            PrintWriter Productos2 = new PrintWriter(outFile);
            
            File Proveedores = new File ("src/Files/Proveedores.txt");
            BufferedReader pv = new BufferedReader(new FileReader(Proveedores));
            File fichero2 = new File("src/Files/Proveedores2.txt");
            FileWriter outFile2 = new FileWriter(fichero2,false);
            PrintWriter Proveedores2 = new PrintWriter(outFile2);
            
            String line=null;
            String line2=null;
            
            Boolean hay=false;
            while ((line=pr.readLine()) != null){
                String temp[]=line.split("\\|");
                if (temp[0].equalsIgnoreCase(cod_eliminar)){
                    hay=true;
                }else{
                    Productos2.println(line);
                }
            }
            while ((line2=pv.readLine()) != null){
                String temp2[]=line2.split("\\|");
                if (temp2[5].equalsIgnoreCase(cod_eliminar)){
                    hay=true;
                }else{
                    Proveedores2.println(line2);
                }
            }
            pr.close();
            Productos2.close();
            pv.close();
            Proveedores2.close();
            
            if(hay==false){
                JOptionPane.showMessageDialog(null,"El producto no existe.");
                fichero.delete();
                fichero2.delete();
                
            }else{
                JOptionPane.showMessageDialog(null, "El producto ha sido eliminado.");
                Productos.delete();
                Proveedores.delete();
                
                File rn = new File ("src/Files/Productos.txt");
                boolean renombrar = fichero.renameTo(rn);
                
                File rn2 = new File ("src/Files/Proveedores.txt");
                boolean renombrar2 = fichero2.renameTo(rn2);
            }
        }catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Error eliminando el producto.");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Button_EliminarActionPerformed

    private void Overview_ProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Overview_ProductosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Overview_ProductosMouseClicked

    private void SideBarComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_SideBarComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_SideBarComponentShown

    private void Overview_ProductosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Overview_ProductosComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_Overview_ProductosComponentShown

    private void Overview_ProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Overview_ProveedoresMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Overview_ProveedoresMouseClicked

    private void Overview_ProveedoresComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Overview_ProveedoresComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_Overview_ProveedoresComponentShown

    private void CedulaEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedulaEliminarActionPerformed
            
    }//GEN-LAST:event_CedulaEliminarActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String Nombre = NombreProveedor1.getText();
        String CedulaStr = CedulaJuridica.getText();
        String ProdSuministrado = ProductoSuministrado1.getText();
        String Fecha = FechaDeEntrega.getText();

// VERIFICACIONES
// Verificar que la cédula sea un número
        int Cedula;
        try {
            Cedula = Integer.parseInt(CedulaStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de cédula válido.");
            return;
        }

// Verificar que el producto suministrado no esté vacío
        if (ProdSuministrado.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el nombre del producto suministrado.");
            return;
        }
// Verificar que el producto suministrado no esté vacío
        if (Nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el nombre del proveedor");
            return;
        }

// Verificar que la fecha esté en el formato DD/MM/AA
        if (!Fecha.matches("\\d{2}/\\d{2}/\\d{2}")) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese la fecha en el formato DD/MM/AA.");
            return;
        }
// Agregar a la tabla
        DefaultTableModel model = (DefaultTableModel) Overview_Proveedores.getModel(); // Suponiendo que la tabla se llama jTable1
        model.addRow(new Object[]{Nombre, Cedula, ProdSuministrado, "0", Fecha});

// GUARDAR EN EL ARCHIVO
        try (FileWriter fw = new FileWriter("src/Files/Proveedores.txt", true); PrintWriter pw = new PrintWriter(fw)) {

            // Escribir los datos en el archivo
            pw.println(Nombre + "|" + Cedula + "|" + ProdSuministrado + "|0|" + Fecha+"|P|");

            JOptionPane.showMessageDialog(this, "Datos guardados correctamente!");

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + ex.getMessage());
        }

// Limpiar los campos
        NombreProveedor1.setText("");
        CedulaJuridica.setText("");
        ProductoSuministrado1.setText("");
        FechaDeEntrega.setText("");

    }//GEN-LAST:event_jButton7ActionPerformed

    private void NombreProveedor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreProveedor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreProveedor1ActionPerformed

    private void CedulaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedulaJuridicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CedulaJuridicaActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
//     
//String archivoOriginal = "src/Files/Proveedores.txt";
//String archivoTemporal = "src/Files/Proveedores_temp.txt";
//String cedulaEliminar = CedulaEliminar.getText().trim();
//
//File archivo = new File(archivoOriginal);
//File temporal = new File(archivoTemporal);
//
//boolean lineaEliminada = false;
//
//try (BufferedReader br = new BufferedReader(new FileReader(archivo));
//     BufferedWriter bw = new BufferedWriter(new FileWriter(temporal))) {
//
//    String apuntador;
//
//    while ((apuntador = br.readLine()) != null) {
//        String[] valores = apuntador.split("\\|");
//
//        if (valores.length >= 3) {
//            String cedula = valores[1].trim();
//
//            // Comparar cédula
//            if (cedulaEliminar.equals(cedula)) { 
//                System.out.println("Eliminando línea: " + apuntador);
//                lineaEliminada = true;
//                continue; 
//            }
//        }
//
//        // Escribir la línea en el archivo temporal si no es la que se va a eliminar
//        bw.write(apuntador);
//        bw.newLine();
//    }
//    
//    bw.close();
//    br.close();
//
//} catch (IOException e) {
//    System.out.println("Error al leer o escribir el archivo: " + e.getMessage());
//    return;
//}
//
//// Reemplazar el archivo original con el archivo temporal
//try {
//    if (archivo.exists()) {  // Verificar que el archivo original existe antes de eliminarlo
//        System.out.println("Eliminando archivo original...");
//        if (archivo.delete()) {  // Eliminar el archivo original
//            System.out.println("Archivo original eliminado.");
//        } else {
//            System.out.println("No se pudo eliminar el archivo original.");
//            JOptionPane.showMessageDialog(null, "Error al eliminar el archivo original.");
//            return;  // Salir si no se puede eliminar el archivo original
//        }
//    }
//
//    if (temporal.exists()) {  // Verificar que el archivo temporal existe
//        System.out.println("Renombrando archivo temporal...");
//        if (temporal.renameTo(archivo)) {  // Renombrar el archivo temporal
//            System.out.println("Archivo temporal renombrado con éxito.");
//            if (lineaEliminada) {
//                JOptionPane.showMessageDialog(null, "Archivo actualizado y proveedor eliminado correctamente.");
//            } else {
//                JOptionPane.showMessageDialog(null, "No se encontró ningún proveedor con esa cédula.");
//            }
//        } else {
//            System.out.println("No se pudo renombrar el archivo temporal.");
//            JOptionPane.showMessageDialog(null, "Error al renombrar el archivo temporal.");
//        }
//    } else {
//        System.out.println("El archivo temporal no existe.");
//        JOptionPane.showMessageDialog(null, "El archivo temporal no existe.");
//    }
//} catch (HeadlessException e) {
//    JOptionPane.showMessageDialog(null, "Error durante la actualización del archivo: " + e.getMessage());
//}

    String archivoOriginal = "src/Files/Proveedores.txt";
    String cedulaEliminar = CedulaEliminar.getText();
    eliminarRegistro(archivoOriginal, cedulaEliminar);

    }//GEN-LAST:event_jButton8ActionPerformed
    public static void eliminarRegistro(String archivoOriginal, String cedulaEliminar) {
        File archivo = new File(archivoOriginal);

        try (RandomAccessFile raf = new RandomAccessFile(archivo, "rw")) {
            String apuntador;
            long apuntadorPosicion = 0;
            boolean lineaEliminada = false;

            while ((apuntador = raf.readLine()) != null) {
                String[] valores = apuntador.split("\\|");

                if (valores.length >= 3) {
                    String cedula = valores[1].trim();

                    if (cedulaEliminar.equals(cedula)) {
                        long longitudLinea = raf.getFilePointer() - apuntadorPosicion;
                        long siguientePosicion = raf.getFilePointer();

                        byte[] buffer = new byte[(int) (raf.length() - siguientePosicion)];
                        raf.seek(siguientePosicion);
                        raf.readFully(buffer);

                        raf.seek(apuntadorPosicion);
                        raf.write(buffer);
                        raf.setLength(raf.length() - longitudLinea);
                        lineaEliminada = true;
                        break;
                    }
                }

                apuntadorPosicion = raf.getFilePointer();
            }

            if (lineaEliminada) {
                JOptionPane.showMessageDialog(null, "Proveedor eliminado correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró ningún proveedor con esa cédula");
            }

        } catch (IOException e) {
            System.out.println("Error al leer o escribir el archivo: " + e.getMessage());
        }
    }

    

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        try (BufferedReader br = new BufferedReader(new FileReader("src/Files/Proveedores.txt"))) {
            String apuntador;

            // Leer el archivo 
            while ((apuntador = br.readLine()) != null) {
                System.out.println("Leyendo línea: " + apuntador);
                String[] valores = apuntador.split("\\|");

                if (valores.length >= 3) {
                    String cedulaeliminar = CedulaEliminar.getText();
                    String cedula = valores[1].trim();
                    String nombre = valores[0].trim();
                    String ProductoSuministrado = valores[2].trim();
                    String Fecha = valores[4].trim();

                    // Comparar cédula
                    if (cedulaeliminar.equals(cedula)) {
                        System.out.println(cedula + "|" + CedulaEliminar);
                        JOptionPane.showMessageDialog(this, "Nombre: " + nombre + "\nProducto que suministra: " + ProductoSuministrado + "\nUltima fecha de entrega: " + Fecha);
                        return;

                    }
                }
            }

            // Mensaje si no se encuentra la cédula
            JOptionPane.showMessageDialog(this, "Cédula no encontrada.");

        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton9ActionPerformed
    
    
    private void ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox1ActionPerformed
        
    }//GEN-LAST:event_ComboBox1ActionPerformed

    private void ComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox1MouseClicked
        
        ComboBox1.removeAllItems();
        
        BufferedReader pr = null;
        try {
            File Pr = new File ("src/Files/Productos.txt");
            pr = new BufferedReader(new FileReader(Pr));
            String line=pr.readLine();
            while((line=pr.readLine()) != null){
                String temp[]=line.split("\\|");
                String cod = temp[0];
                ComboBox1.addItem(cod);
            }
            pr.close();
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                pr.close();
            } catch (IOException ex) {
                Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ComboBox1MouseClicked

    private void ComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBox2MouseClicked
        ComboBox2.removeAllItems();
        
        BufferedReader pr = null;
        try {
            File Pr = new File ("src/Files/Productos.txt");
            pr = new BufferedReader(new FileReader(Pr));
            String line=pr.readLine();
            while((line=pr.readLine()) != null){
                String temp[]=line.split("\\|");
                String cod = temp[0];
                ComboBox2.addItem(cod);
            }
            pr.close();
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                pr.close();
            } catch (IOException ex) {
                Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ComboBox2MouseClicked

    private void ButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonActualizarActionPerformed
        String cod_Actualizar= ComboBox2.getSelectedItem().toString();
        try{
            File Productos = new File ("src/Files/Productos.txt");
            BufferedReader pr = new BufferedReader(new FileReader(Productos));
            File fichero = new File("src/Files/Productos2.txt");
            FileWriter outFile = new FileWriter(fichero,false);
            PrintWriter Productos2 = new PrintWriter(outFile);

            String line=null;

            Boolean hay=false;
            while ((line=pr.readLine()) != null){
                String temp[]=line.split("\\|");
                if (temp[0].equalsIgnoreCase(cod_Actualizar)){
                    String precionuevo = PrecioNuevo.getText();
                    Productos2.println(temp[0] + "|" + temp[1] + "|" + temp[2] + "|" + precionuevo + "|" + temp[4] + "|" + temp[5] + "|" + temp[6]);
                    hay=true;
                }else{
                    Productos2.println(line);
                }
            }
            pr.close();
            Productos2.close();
            
            if(hay==false){
                JOptionPane.showMessageDialog(null,"El producto no existe.");
                fichero.delete();
                
            }else{
                JOptionPane.showMessageDialog(null, "El precio ha sido actualizado correctamente.");
                Productos.delete();
                
                File rn = new File ("src/Files/Productos.txt");
                boolean renombrar = fichero.renameTo(rn);
            }
            PrecioNuevo.setText("");
        }catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Error actualizando el precio.");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ButtonActualizarActionPerformed

    private void ComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox2ActionPerformed

    }//GEN-LAST:event_ComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazGrafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Actualizar_Precio_Del_Producto;
    private javax.swing.JPanel Agregar_Eliminar_Proveedores;
    private javax.swing.JButton ButtonActualizar;
    private javax.swing.JButton Button_Eliminar;
    private javax.swing.JTextField CedulaEliminar;
    private javax.swing.JTextField CedulaJuridica;
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JComboBox<String> ComboBox2;
    private javax.swing.JPanel Eliminar_Productos;
    private javax.swing.JTextField FechaDeEntrega;
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTextField NombreProveedor1;
    private javax.swing.JTable Overview_Productos;
    private javax.swing.JTable Overview_Proveedores;
    private javax.swing.JTextField PrecioNuevo;
    private javax.swing.JLabel PrecioViejo;
    private javax.swing.JTextField ProductoSuministrado1;
    private javax.swing.JPanel Productos;
    private javax.swing.JPanel Proveedores;
    private javax.swing.JPanel Reposicion_De_Productos;
    private javax.swing.JPanel SideBar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    // End of variables declaration//GEN-END:variables
}
